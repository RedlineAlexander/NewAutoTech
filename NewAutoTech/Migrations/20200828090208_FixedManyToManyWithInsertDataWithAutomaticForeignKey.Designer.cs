// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewAutoTech.Data;

namespace NewAutoTech.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200828090208_FixedManyToManyWithInsertDataWithAutomaticForeignKey")]
    partial class FixedManyToManyWithInsertDataWithAutomaticForeignKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewAutoTech.Models.Autos", b =>
                {
                    b.Property<int>("AutoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutoColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YearFromPipeline")
                        .HasColumnType("datetime2");

                    b.HasKey("AutoID");

                    b.ToTable("Autos");

                    b.HasData(
                        new
                        {
                            AutoID = 1,
                            AutoColor = "Red",
                            AutoName = "Mazda",
                            YearFromPipeline = new DateTime(2013, 7, 10, 23, 49, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("NewAutoTech.Models.AutosAndOwners", b =>
                {
                    b.Property<int>("Autoid")
                        .HasColumnType("int");

                    b.Property<int>("Ownerid")
                        .HasColumnType("int");

                    b.HasKey("Autoid", "Ownerid");

                    b.HasIndex("Ownerid");

                    b.ToTable("AutosAndOwners");
                });

            modelBuilder.Entity("NewAutoTech.Models.Owners", b =>
                {
                    b.Property<int>("OwnerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OwnerID");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            OwnerID = 1,
                            BirthDate = new DateTime(2002, 7, 10, 23, 45, 0, 0, DateTimeKind.Unspecified),
                            FatherName = "Oleksiovic",
                            FirstName = "Tyxy",
                            LastName = "Oleks"
                        });
                });

            modelBuilder.Entity("NewAutoTech.Models.AutosAndOwners", b =>
                {
                    b.HasOne("NewAutoTech.Models.Autos", "Autos")
                        .WithMany("AutosOwners")
                        .HasForeignKey("Autoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewAutoTech.Models.Owners", "Owners")
                        .WithMany("OwnersAutos")
                        .HasForeignKey("Ownerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
